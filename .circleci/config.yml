---
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.4
  node: circleci/node@5.0.2
jobs:
  build:
    working_directory: ~/pulmap
    docker:
      # The primary container is an instance of the first list image listed. Your build commands run in this container.
      - image: cimg/ruby:3.1.0-browsers
        environment:
          RAILS_ENV: test
          PULMAP_DB_HOST: localhost
          PULMAP_DB_USERNAME: geoblacklight
      - image: postgres:15
        environment:
          POSTGRES_USER: geoblacklight
          POSTGRES_DB: pulmap_test
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          chrome-version: 116.0.5845.96
      - browser-tools/install-chromedriver
      - checkout
      - restore_cache:
          keys:
            - pulmap-{{ checksum "Gemfile.lock" }}
            - pulmap-yarn-{{ checksum "yarn.lock" }}
      # Install Bundler
      - run: gem install bundler -v '~> 2.0'
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: pulmap-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: pulmap-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      # Disable spring while precompiling
      - run: DISABLE_SPRING=1 NODE_ENV=test bundle exec rake vite:build
      - persist_to_workspace:
          root: '~/pulmap'
          paths: '*'
  test:
    working_directory: ~/pulmap
    docker:
      - image: cimg/ruby:3.1.0-browsers
        environment:
          RAILS_ENV: test
          PULMAP_DB_HOST: localhost
          PULMAP_DB_USERNAME: geoblacklight
          SOLR_URL: http://solr:SolrRocks@localhost:8983/solr/pulmap-core-test
          CI: true
      - image: postgres:15
        environment:
          POSTGRES_USER: geoblacklight
          POSTGRES_DB: pulmap_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: pulibrary/ci-solr:8.4-v1.0.0
        command: server/scripts/ci-start.sh
    steps:
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          chrome-version: 116.0.5845.96
      - browser-tools/install-chromedriver
      - attach_workspace:
          at: '~/pulmap'
      # Install Bundler
      - run: gem install bundler -v '~> 2.0'
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      - run:
          name: Load config into solr
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@127.0.0.1:8983/solr/admin/configs?action=UPLOAD&name=pulmap"
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8983/api/collections/  -d '{create: {name: pulmap-core-test, config: pulmap, numShards: 1}}'
      - run: bundle exec rake db:migrate
      - run: bundle exec rake geoblacklight:solr:seed
      - run: bundle exec rspec spec/
      - store_artifacts:
          path: coverage
          destination: coverage
  rubocop:
    working_directory: ~/pulmap
    docker:
      - image: cimg/ruby:3.1.0-browsers
        environment:
          RAILS_ENV: test
          PULMAP_DB_HOST: localhost
          PULMAP_DB_USERNAME: geoblacklight
    steps:
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          chrome-version: 116.0.5845.96
      - browser-tools/install-chromedriver
      - attach_workspace:
          at: '~/pulmap'
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      # Install Bundler
      - run: gem install bundler -v '~> 2.0'
      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      - run: bundle exec rubocop
workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - rubocop:
          requires:
            - build
