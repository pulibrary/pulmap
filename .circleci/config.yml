---
version: 2.1
executors:
  pulmap-executor:
    docker:
      # The primary container is an instance of the first list image listed. 
      # Your build commands run in this container.
      - image: circleci/ruby:2.6-node-browsers
        environment:
          RAILS_ENV: test
          PULMAP_DB_HOST: localhost
          PULMAP_DB_USERNAME: geoblacklight
      - image: postgres:10.6-alpine
        environment:
          POSTGRES_USER: geoblacklight
          POSTGRES_DB: pulmap_test
          POSTGRES_HOST_AUTH_METHOD: trust
    working_directory: ~/pulmap
    
commands:
  setup-bundler:
    description: "Install correct version of bundler and load from cache or bundle install"
    steps:
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - pulmap-bundle-v3-{{ checksum "Gemfile.lock" }}
            - pulmap-bundle-v3-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: pulmap-bundle-v3-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

jobs:
  build:
    executor: pulmap-executor
    steps:
      - attach_workspace:
          at: '~/pulmap'
      - checkout
      - setup-bundler
      - run:
          name: Install node@lts/erbium (need right version for `yarn`)
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install lts/erbium' >> $BASH_ENV
            echo 'nvm alias default lts/erbium' >> $BASH_ENV
      - run:
          name: Check current version of node
          command: node -v

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - pulmap-yarn-{{ checksum "yarn.lock" }}
            - pulmap-yarn-
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --cache-folder ~/.cache/yarn
      # Store yarn / webpacker cache
      - save_cache:
          key: pulmap-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      # Disable spring while precompiling webpacker
      - run: DISABLE_SPRING=1 NODE_ENV=test bundle exec rails webpacker:compile
      - persist_to_workspace:
          root: '~/pulmap'
          paths: '*'
#   test:
#     executor: pulmap-executor
#     # working_directory: ~/pulmap
#     # docker:
#     #   - image: circleci/ruby:2.6-node-browsers
#     #     environment:
#     #       RAILS_ENV: test
#     #       PULMAP_DB_HOST: localhost
#     #       PULMAP_DB_USERNAME: geoblacklight
#     #   - image: postgres:10.6-alpine
#     #     environment:
#     #       POSTGRES_USER: geoblacklight
#     #       POSTGRES_DB: pulmap_test
#     #       POSTGRES_HOST_AUTH_METHOD: trust
#     #   - image: solr:7.7-alpine
#     #     command: bin/solr -cloud -noprompt -f -p 8984
#     steps: &test_steps
#       - attach_workspace:
#           at: '~/pulmap'
#       # Install Bundler
#       - run: gem install bundler -v '~> 2.0'
#       - run:
#           name: Install node@8.17.0 (need right version for `yarn`)
#           command: |
#             set +e
#             touch $BASH_ENV
#             curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
#             echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
#             echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
#             echo 'nvm install lts/erbium' >> $BASH_ENV
#             echo 'nvm alias default lts/erbium' >> $BASH_ENV
# 
#       - run:
#           name: Check current version of node
#           command: node -v
#       # Bundle install dependencies
#       - run: bundle install --path vendor/bundle
#       - run:
#           name: Load config into solr
#           command: |
#             cd solr/conf
#             zip -1 -r solr_config.zip ./*
#             curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8984/solr/admin/configs?action=UPLOAD&name=pulmap"
#             curl -H 'Content-type: application/json' http://localhost:8984/api/collections/ -d '{create: {name: pulmap-core-test, config: pulmap, numShards: 1}}'
#       - run: bundle exec rake db:migrate
#       - run: bundle exec rake geoblacklight:solr:seed
#       - run: bundle exec rspec spec/
# 
#       # Save test results for timing analysis
#       - store_test_results:
#           path: test_results
# 
#       - persist_to_workspace:
#           root: '~/pulmap'
#           paths: '*'
#   rubocop:
#     working_directory: ~/pulmap
#     docker:
#       - image: circleci/ruby:2.6-node-browsers
#         environment:
#           RAILS_ENV: test
#           PULMAP_DB_HOST: localhost
#           PULMAP_DB_USERNAME: geoblacklight
#     steps:
#       - attach_workspace:
#           at: '~/pulmap'
#       - run:
#           name: Install node@8.17.0 (need right version for `yarn`)
#           command: |
#             set +e
#             touch $BASH_ENV
#             curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
#             echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
#             echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
#             echo 'nvm install lts/erbium' >> $BASH_ENV
#             echo 'nvm alias default lts/erbium' >> $BASH_ENV
# 
#       - run:
#           name: Check current version of node
#           command: node -v
#       # Install Bundler
#       - run: gem install bundler -v '~> 2.0'
#       # Bundle install dependencies
#       - run: bundle install --path vendor/bundle
#       - run: bundle exec rake rubocop
#   coverage_report:
#     executor: pulmap-executor
#     steps:
#       - attach_workspace:
#           at: '~/pulmap'
#       - run: gem install simplecov
#       - run:
#           name: Inspect coverage report
#           command: |
#             RAILS_ENV=test ruby ./scripts/report_coverage.rb
#       - store_artifacts:
#           path: ~/pulmap/coverage
#           destination: coverage
# workflows:
#   version: 2
#   build_accept_deploy:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
#       - rubocop:
#           requires:
#             - build
#       - coverage_report:
#          requires:
#           - test
